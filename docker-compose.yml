version: '3.7'

services:

  campaign_db:
    image: postgres:13.2-alpine
    container_name: campaign_server_storage
    volumes:
      - type: volume
        source: campaign_db_data
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:latest
    restart: always
    ports:
    - 6379:6379

  campaign_server:
    depends_on:
      - redis
      - campaign_db
    build: .
    environment:
      - HOST=0.0.0.0
      - PORT=8080
#      - PORT_SECURE=443
#      - REDIS_URL=redis:6379
      - REDIS_URL=redis:6379
      - POSTGRES_DB_HOST=campaign_db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - API_KEY=${API_KEY}
    ports:
      - 8081:80
#      - ${PORT}:80
#      - ${PORT_SECURE}:443
    restart: always
    volumes:
#      - type: bind
#        source: /etc/letsencrypt/live/adbuyengine.com/fullchain.pem
#        target: /app/fullchain.pem
#      - type: bind
#        source: /etc/letsencrypt/live/adbuyengine.com/privkey.pem
#        target: /app/privkey.pem
      - type: bind
        source: ./static
        target: /app/static
      - type: bind
        source: ./migrations
        target: /app/migrations
      - type: bind
        source: ./bin/campaign_server
        target: /app/campaign_server
      - type: bind
        source: ./GeoLite2-City.mmdb
        target: /app/GeoLite2-City.mmdb
      - type: bind
        source: ./GeoLite2-ASN.mmdb
        target: /app/GeoLite2-ASN.mmdb
      - type: bind
        source: ./GeoLite2-Country.mmdb
        target: /app/GeoLite2-Country.mmdb
      - type: bind
        source: ./regexes.yaml
        target: /app/regexes.yaml

volumes:
  campaign_db_data:
    external:
      name: campaign_server_storage